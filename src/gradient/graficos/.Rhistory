# Não conssigo ver nada. Gráfico caótico e ruim, na minha opinião.
# Vamos tentar separar por Passengers
dados %>%
ggplot(aes(x=Horsepower, y=Weight, color=DriveTrain))+
geom_point()+
facet_grid(Passengers~.)
# Aparentemente, há uma certa relação entre o número de passageiros e o peso do carro.
dados %>%
ggplot(aes(x=Horsepower, y=Weight))+ # as.factor(Passengers) fica com cores diferentes -> melhor
geom_point()+
facet_grid(DriveTrain~Passengers)
# Aparentemente, há uma certa relação entre o número de passageiros e o peso do carro.
dados %>%
ggplot(aes(x=Horsepower, y=Weight))+ # as.factor(Passengers) fica com cores diferentes -> melhor
geom_point()+
facet_grid(DriveTrain~Passengers)+
theme_minimal()
# Aparentemente, há uma certa relação entre o número de passageiros e o peso do carro.
dados %>%
ggplot(aes(x=Horsepower, y=Weight))+ # as.factor(Passengers) fica com cores diferentes -> melhor
geom_point()+
facet_grid(DriveTrain~Passengers)+
theme_classic()
# Aparentemente, há uma certa relação entre o número de passageiros e o peso do carro.
dados %>%
ggplot(aes(x=Horsepower, y=Weight))+ # as.factor(Passengers) fica com cores diferentes -> melhor
geom_point()+
facet_grid(DriveTrain~Passengers)+
theme_dark()
dados %>%
ggplot(aes(x=Horsepower, y=Weight))+ # as.factor(Passengers) fica com cores diferentes -> melhor
geom_boxplot()+
facet_grid(DriveTrain~Passengers)+
theme_dark()
dados %>%
ggplot(aes(x=Horsepower, y=Weight))+ # as.factor(Passengers) fica com cores diferentes -> melhor
geom_violin()+
facet_grid(DriveTrain~Passengers)+
theme_dark()
# ------------------------------------------------------------------------#
#5) Analise as variáveis Horsepower, Weight, Man.trans.avail, Passengers
# e DriveTrain. Use gráficos e/ou medidas estatísticas, o que achar
# adequado, além de palavras para dar sua resposta. Interprete os
# resultados.
summary(dados[,c("Horsepower","Weight","Man.trans.avail","Passengers","DriveTrain")]) # Duas variáveis qualitativas e o resto quantitativas
dados %>%
ggplot(aes(x=Horsepower, y=Weight, size=DriveTrain, color=as.factor(Passengers), ))+
geom_point()
# Vamos tentar separar por Passengers
dados %>%
ggplot(aes(x=Horsepower, y=Weight, color=DriveTrain))+
geom_point()+
facet_grid(Passengers~.)
# Vamos testar outros layouts.
dados %>%
ggplot(aes(x=Horsepower, y=Weight, color=Passengers))+
geom_point()+
facet_grid(DriveTrain~.)
dados %>%
ggplot(aes(x=Horsepower, y=Weight, color=as.factor(Passengers)))+ # as.factor(Passengers) fica com cores diferentes -> melhor
geom_point()+
facet_grid(DriveTrain~.)
dados %>%
ggplot(aes(x=Horsepower, y=Weight))+ # as.factor(Passengers) fica com cores diferentes -> melhor
geom_point()+
facet_grid(DriveTrain~Passengers)+
theme_dark()
# Neste último gráfico mostra que a relação Horsepower e Weight, quando o número de
# passageiros é igual a 5 e do tipo Front, pode ter uma relação linear.
d = dados %>%
filter(DriveTrain=="Front") %>%
filter(Passengers == 5)
cor(d$Weight,d$Horsepower)
cor(dados$Weight,dados$Horsepower)
# A correlação ficou maior que quando a fizemos na questão número 1.
# Isso pode significar que quando avaliamos a correlação dessas variáveis com
# as observações que são de carros que não são muito comuns, como de 7, 8 e 2 passageiros podem
# acrescentar um certo ruído.
d = dados %>%
filter(Passengers == 5 & Passengers == 4)
cor(d$Weight,d$Horsepower)
# A correlação ficou maior que quando a fizemos na questão número 1.
# Isso pode significar que quando avaliamos a correlação dessas variáveis com
# as observações que são de carros que não são muito comuns, como de 7, 8 e 2 passageiros podem
# acrescentar um certo ruído.
d = dados %>%
filter(Passengers == 5 && Passengers == 4)
cor(d$Weight,d$Horsepower)
# A correlação ficou maior que quando a fizemos na questão número 1.
# Isso pode significar que quando avaliamos a correlação dessas variáveis com
# as observações que são de carros que não são muito comuns, como de 7, 8 e 2 passageiros podem
# acrescentar um certo ruído.
d = dados %>%
filter(Passengers == 5 && Passengers == 4)
cor(d$Weight,d$Horsepower)
# A correlação ficou maior que quando a fizemos na questão número 1.
# Isso pode significar que quando avaliamos a correlação dessas variáveis com
# as observações que são de carros que não são muito comuns, como de 7, 8 e 2 passageiros podem
# acrescentar um certo ruído.
d = dados %>%
filter(Passengers == 5)
cor(d$Weight,d$Horsepower)
cor(dados$Weight,dados$Horsepower)
# Avaliando as variáveis por número de passageiros, a correlação é maior.
d = dados %>%
filter(Passengers == 4)
cor(d$Weight,d$Horsepower) # correlação das variáveis para número de passageiros = 4
# Vamos ver até quando esse coeficiente é maior que o feito na questão 1.
d = dados %>%
filter(Passengers == 6)
cor(d$Weight,d$Horsepower) # correlação das variáveis para número de passageiros = 3
cor(dados$Weight,dados$Horsepower)
# Decidi não fazer a correlação para número de passageiros igual a 2, 7 e 8 pois há poucos dados.
# Vamos testar com esses números juntos, então.
d = dados %>%
filter(Passengers != 4) %>%
filter(Passengers != 5) %>%
filter(Passengers != 6)
cor(d$Weight,d$Horsepower) # correlação das variáveis para número de passageiros =
# Deu negativo, vamos plottar para ver se esse coeficiente faz sentido.
d %>%
ggplot(aes(x=Horsepower, y=Weight))+
geom_point()
dados %>%
ggplot(aes(x=Horsepower, y=Weight))+ # as.factor(Passengers) fica com cores diferentes -> melhor
geom_point()+
facet_grid(DriveTrain~Passengers)+
theme_dark()
dados %>%
ggplot(aes(x=Horsepower, y=Weight))+ # as.factor(Passengers) fica com cores diferentes -> melhor
geom_point()+
facet_grid(DriveTrain~Passengers)+
theme_dark()
dados %>%
ggplot(aes(x=Horsepower, y=Weight,color=as.factor(Passengers)))+ # as.factor(Passengers) fica com cores diferentes -> melhor
geom_point()+
facet_grid(DriveTrain~.)+
theme_dark()
dados %>%
ggplot(aes(x=Horsepower, y=Weight,color=as.factor(Passengers)))+ # as.factor(Passengers) fica com cores diferentes -> melhor
geom_point()+
facet_grid(DriveTrain~.)
# Com esse gráfico, da pra perceber que os carros do tipo Rear de DriveTrain são em geral mais pesados que os demais.
d = dados %>%
filter(DriveTrain == "Front")
mean(d$Weight)
d = dados %>%
filter(DriveTrain == "4WD")
mean(d$Weight)
d = dados %>%
filter(DriveTrain == "Rear")
mean(d$Weight)
# Com esse gráfico, da pra perceber que os carros do tipo Rear de DriveTrain são em geral mais pesados que os demais.
# Média dos pesos cujo DriveTrain é Front
d = dados %>%
filter(DriveTrain == "Front")
mean(d$Weight)
# Média dos pesos cujo DriveTrain é 4WD
d = dados %>%
filter(DriveTrain == "4WD")
mean(d$Weight)
# Média dos pesos cujo DriveTrain é Rear
d = dados %>%
filter(DriveTrain == "Rear")
# Com esse gráfico, da pra perceber que os carros do tipo Rear de DriveTrain são em geral mais pesados que os demais.
# Média dos pesos cujo DriveTrain é Front
d = dados %>%
filter(DriveTrain == "Front")
mean(d$Weight)
sd(d$Weight)
# Média dos pesos cujo DriveTrain é 4WD
d = dados %>%
filter(DriveTrain == "4WD")
mean(d$Weight)
sd(d$Weight)
# Média dos pesos cujo DriveTrain é Rear
d = dados %>%
filter(DriveTrain == "Rear")
mean(d$Weight)
sd(d$Weight)
# DriveTrain = Front
d = dados %>%
filter(DriveTrain == "Front")
mean(d$Weight) # Média dos pesos dos carros
sd(d$Weight) # Desvio padrão dos pesos dos carro
# DriveTrain = 4WD
d = dados %>%
filter(DriveTrain == "4WD")
mean(d$Weight) # Média dos pesos
sd(d$Weight) # Desvio padrão dos pesos dos carros
# DriveTrain = Rear
d = dados %>%
filter(DriveTrain == "Rear")
mean(d$Weight) #  Média dos pesos dos carros
sd(d$Weight) # Desvio padrão dos pesos dos carros
# ------------------------------------------------------------#
# Limpando Environment
rm(list = ls(all=TRUE))
# Importando bibliotecas que serão utilizadas
library(tidyverse)
library(MASS)
library(stringr)
library(e1071)
# Lendo banco
?Cars93
dados = Cars93
names(dados)
summary(dados)
colnames(dados)
# Corrigindo banco
dados$Manufacturer
dados$Manufacturer == "Chrylser"
dados$Manufacturer[dados$Manufacturer == "Chrylser"] = "Chrysler"
dados$Manufacturer
dados$Manufacturer  = droplevels(dados$Manufacturer)
# ------------------------------------------------------------#
#1) Analise a relação das variáveis EngineSize, Fuel.tank.capacity,
# Horsepower e Weight duas a duas. Use gráficos e/ou medidas estatísticas,
# o que achar adequado, além de palavras
# para dar sua resposta. Interprete os resultados.
# ->
colunas = c("EngineSize","Fuel.tank.capacity","Horsepower","Weight")
summary(dados[,colunas])
# Como são variáveis contínuas, vou plotar um gráfico de dispersão pra ver como é o comportamento duas a duas.
pairs(dados[,colunas],
label = c("Tamanho do motor","Capacidade do tanque\n de combustível", "Cavalos de força","Peso do carro"),
pch=20)
# Aparentemente algumas relações podem ser lineares. Vamos utilizar o coeficiente de correlação para ter certeza.
# As funções a seguir foram retiradas do código da prática 6.
panel.smooth2=function(x, y, col = par("col"), bg = NA, pch = par("pch"),
cex = 1,  span = 2/3, iter = 3, ...)
{
points(x, y, pch = 20, col = "blue", bg = bg, cex = cex)
ok <- is.finite(x) & is.finite(y)
if (any(ok))
lines(stats::lowess(x[ok], y[ok], f = span, iter = iter),
col = "red", ...)
}
panel.cor = function(x,y, digits = 3)
{
usr = par("usr")
on.exit(par(usr))
par(usr = c(0,1,0,1))
r = cor(x,y)
text(0.5,0.5, round(r, digits), cex=1.5)
}
# Plotando os gráficos com os respectivos coeficientes de correlação.
pairs(dados[,colunas],
label = c("Tamanho do motor","Capacidade do tanque\n de combustível", "Cavalos de força","Peso do carro"),
#pch = 20, # Se você utilizar o pch aqui ele não vai plottar o gráfico. Cuidado.
upper.panel = panel.smooth2,
lower.panel = panel.cor)
# Modificando um pouco a função panel.cor para ser de covariância
panel.cov = function(x,y, digits = 3)
{
usr = par("usr")
on.exit(par(usr))
par(usr = c(0,1,0,1))
r = cov(x,y)
text(0.5,0.5, round(r, digits), cex=1.5)
}
pairs(dados[,colunas],
label = c("Tamanho do motor","Capacidade do tanque\n de combustível", "Cavalos de força","Peso do carro"),
#pch = 20, # Se você utilizar o pch aqui ele não vai plottar o gráfico. Cuidado.
upper.panel = panel.smooth2,
lower.panel = panel.cov)
# Colocando correlação e covariância no mesmo plot
panel.cov.cor = function(x,y, digits_cov = 2, digits_cor = 3)
{
usr = par("usr")
on.exit(par(usr))
par(usr = c(0,1,0,1))
r = cov(x,y)
c = cor(x,y)
text(0.5,0.6, str_c("Cor: ",round(c, digits_cor)), cex=1.5)
text(0.5,0.3, str_c("Cov: ",round(r, digits_cov)), cex=1.5)
}
pairs(dados[,colunas],
label = c("Tamanho do motor\n (EngineSize)","Capacidade do tanque\n de combustível\n(Fuel.tank.capacity)", "Cavalos de força\n(Horsepower)","Peso do carro\n(Weight)"),
#pch = 20, # Se você utilizar o pch aqui ele não vai plottar o gráfico. Cuidado.
upper.panel = panel.smooth2,
lower.panel = panel.cov.cor)
# ~~~ Fuel.tank.capacity vs Hosepower ~~~#
# O gráfico das variáveis Fuel.tank.capacity e Horsepower parece o gráfico da função f(x) = sqrt(x), dado x > 0.
# A correlação é bem alta pois no início se parece uma reta mesmo, e as variáveis parecem andar bem juntas.
# Plotando o gráfico em escala log-log, temos que:
# log f(x) = 1/2 * log(x)   # importante destacar que a base do log é 10
# Então, o gráfico terá que ser linear.
par(mfrow=c(1,2))
plot(dados$Fuel.tank.capacity, dados$Horsepower,
pch=20,
#log="xy",
main = "Gráfico normal",
xlab = "Capacidade do tanque de combustível",
ylab = "Cavalos de força")
plot(dados$Fuel.tank.capacity, dados$Horsepower,
pch=20,
log="xy",
main = "Gráfico em escala log-log",
xlab = "Capacidade do tanque de combustível",
ylab = "Cavalos de força")
cor(log10(dados$Fuel.tank.capacity),log10(dados$Horsepower))
# Plotando o gráfico, ficou mais parecido com uma reta e a correlação aumentou também.
# Super interessante.
# Mais ainda não entendo o porquê dessa relação ser assim. Eu teria que conversar
# com o cliente ou o proponente do projeto
par(mfrow=c(1,1)) # resetando layout para próximos gráficos
# ------------------------------------------------------------------------#
#2) Analise a relação das variáveis DriveTrain e Horsepower. Use gráficos
# e/ou medidas estatísticas, o que achar adequado, além de palavras
# para dar sua resposta. Interprete os resultados.
summary(dados[,c("DriveTrain","Horsepower")])
?Cars93
# Podemos ver que a variável DriveTrain é qualitativa enquanto a Horsepower é quantitativa.
# A variável DriveTrain se refere aos tipos de Trem de força.
# Segundo [Operation](http://www.operaction.com.br/transmissoes-e-acoplamentos#:~:text=Chamamos%20de%20trem%2Dde%2Dfor%C3%A7a,e%20cubos%20redutores%20das%20rodas.),
# "Chamamos de trem-de-força o conjunto de componentes que são responsáveis pela geração e transmissão
# de força até o solo para que o equipamento seja tracionado."
# Então, queremos saber se há alguma relação entre o tipo de Trem de força e os Cavalos de força dos motores.
p = dados %>%
ggplot(aes(x=Horsepower,y=DriveTrain,color=DriveTrain))
p+
geom_boxplot(show.legend = F)
p+
geom_violin(show.legend = F)+
theme_light()
# A mediana dos Horsepower em relação ao tipo Rear é maior que as demais. Também, a distribuição
# do tipo Rear parece ser bem "homogênea" perto de sua mediana (uma distribuição praticúrtica)
d = dados%>%
filter(DriveTrain == "Rear")
kurtosis(d$Horsepower) # coef. de curtose negativo -> praticúrtica
# Vamos analisar os tipos Front e 4WD, já que suas mediana distam menos que a mediana do tipo Rear.
p = dados %>%
filter(DriveTrain != "Rear")%>%
ggplot(aes(x=Horsepower,y=DriveTrain,color=DriveTrain))
p+
geom_boxplot()
p+
geom_violin()
# ------------------------------------------------------------------------#
#3) Analise a relação das variáveis AirBags e DriveTrain. Use gráficos
# e/ou medidas estatísticas, o que achar adequado, além de palavras
# para dar sua resposta. Interprete os resultados.
summary(dados[,c("AirBags","DriveTrain")])
p = dados %>%
ggplot(aes(x=AirBags))
p+
geom_bar(aes(fill=DriveTrain))+
ylab("Frequência")
# Em complemento a este gráfico, tome essa tabela contingência
table(dados$DriveTrain,dados$AirBags) %>%
prop.table(margin=1)
# Outra opção seria colocar as barras lado a lado
p+
geom_bar(aes(fill=DriveTrain), position = "dodge")+
ylab("Frequência")
# Não há nenhum carro cujo DriveTrain seja 4WD e que tenha AirBags dos dois lados
# Além disso, esse tipo de DriveTrain possuia os menores valores de Horsepower.
# Quando observamos o tipo Rear de DriveTrain, podemos ver que a maioria desses tem AirBags
# de pelo menos um dos lados, ou seja, tem dos dois lados ou tem AirBag no lado do passageiro.
# E se observarmos os valores de Horsepower da última questão, a mediana era maior que as demais.
# Vamos investigar isso.
dados %>%
ggplot(aes(x=Horsepower, y=DriveTrain, color=DriveTrain))+
geom_violin(show.legend = F)+
facet_grid(AirBags~.)
dados %>%
ggplot(aes(x=Horsepower, y=DriveTrain, color=DriveTrain))+
geom_boxplot(show.legend = F)+
facet_grid(AirBags~.)
# Quando separamos os carros que tem AirBags dos dois lados, podemos ver que há uma distribuição
# no tipo Rear e no tipo Front cujo Horsepower é acima da média do Horsepower de carros que não tem AirBags.
# Calculando médias
d = dados %>%
filter(AirBags=="Driver & Passenger")
media = mean(d$Horsepower)
d = dados %>%
filter(AirBags=="None")
media_none = mean(d$Horsepower)
h = 0.001
dados %>%
ggplot(aes(x=Horsepower, y=DriveTrain, color=DriveTrain))+
geom_boxplot()+
facet_grid(AirBags~.)+
geom_rect(ymin=-Inf,
ymax=+Inf,
xmin=media_none-h,
xmax=media_none+h,
fill="gray", # Não está mudando a cor da linha. Não soube como mudar a cor da linha.
alpha=0.01,
show.legend = F)
# ------------------------------------------------------------------------#
#4) Analise o comportamento da variável tipo do carro (Type) dado
# o tipo de direção (Man.trans.avail). Use gráficos
# e/ou medidas estatísticas, o que achar adequado, além de palavras
# para dar sua resposta. Interprete os resultados.
?Cars93
summary(dados[,c("Type","Man.trans.avail")]) # Duas variáveis qualitativas.
dados %>%
ggplot(aes(x=Type,fill=Man.trans.avail))+
geom_bar()
# Os carros Small e Sporty só tem a direção manual, enquanto que carros Large não tem essa direção.
dados %>%
ggplot(aes(x=Type,fill=Man.trans.avail))+
geom_bar(position = "dodge")
# ------------------------------------------------------------------------#
#5) Analise as variáveis Horsepower, Weight, Man.trans.avail, Passengers
# e DriveTrain. Use gráficos e/ou medidas estatísticas, o que achar
# adequado, além de palavras para dar sua resposta. Interprete os
# resultados.
summary(dados[,c("Horsepower","Weight","Man.trans.avail","Passengers","DriveTrain")]) # Duas variáveis qualitativas e o resto quantitativas
dados %>%
ggplot(aes(x=Horsepower, y=Weight, size=DriveTrain, color=as.factor(Passengers), ))+
geom_point()
# Vamos tentar separar por Passengers
dados %>%
ggplot(aes(x=Horsepower, y=Weight, color=DriveTrain))+
geom_point()+
facet_grid(Passengers~.)
# Vamos testar outros layouts.
dados %>%
ggplot(aes(x=Horsepower, y=Weight, color=Passengers))+
geom_point()+
facet_grid(DriveTrain~.)
dados %>%
ggplot(aes(x=Horsepower, y=Weight, color=as.factor(Passengers)))+ # as.factor(Passengers) fica com cores diferentes -> melhor
geom_point()+
facet_grid(DriveTrain~.)
dados %>%
ggplot(aes(x=Horsepower, y=Weight))+ # as.factor(Passengers) fica com cores diferentes -> melhor
geom_point()+
facet_grid(DriveTrain~Passengers)+
theme_dark()
# Neste último gráfico mostra que a relação Horsepower e Weight, quando o número de
# passageiros é igual a 5 e do tipo Front, pode ter uma relação linear.
d = dados %>%
filter(DriveTrain=="Front") %>%
filter(Passengers == 5)
cor(d$Weight,d$Horsepower)
cor(dados$Weight,dados$Horsepower)
# A correlação ficou maior que quando a fizemos na questão número 1.
# Isso pode significar que quando avaliamos a correlação dessas variáveis com
# as observações que são de carros que não são muito comuns, como de 7, 8 e 2 passageiros podem
# acrescentar um certo ruído.
d = dados %>%
filter(Passengers == 5)
cor(d$Weight,d$Horsepower) # correlação das variáveis para número de passageiros = 5
# Avaliando as variáveis por número de passageiros, a correlação é maior.
d = dados %>%
filter(Passengers == 4)
cor(d$Weight,d$Horsepower) # correlação das variáveis para número de passageiros = 4
# Vamos ver até quando esse coeficiente é maior que o feito na questão 1.
d = dados %>%
filter(Passengers == 6)
cor(d$Weight,d$Horsepower) # correlação das variáveis para número de passageiros = 6
# Decidi não fazer a correlação para número de passageiros igual a 2, 7 e 8 pois há poucos dados.
# Vamos testar com esses números juntos, então.
d = dados %>%
filter(Passengers != 4) %>%
filter(Passengers != 5) %>%
filter(Passengers != 6)
cor(d$Weight,d$Horsepower) # correlação das variáveis para número de passageiros = 2 e nº de pass = 7 e nº de pass = 8
# Deu negativo, vamos plottar para ver se esse coeficiente faz sentido.
d %>%
ggplot(aes(x=Horsepower, y=Weight))+
geom_point()
# Mesmo juntos, ainda são pouquíssimos dados para dizer algo. Realmente parece ter uma correlação negativa, mas
# tenho receio pela quantidade de dados. Com esses dados, posso dizer que carros com essa quantidade de passageiros
# não se "comportam" como os demais, pois são menos comuns.
dados %>%
ggplot(aes(x=Horsepower, y=Weight,color=as.factor(Passengers)))+ # as.factor(Passengers) fica com cores diferentes -> melhor
geom_point()+
facet_grid(DriveTrain~.)
# DriveTrain = Front
d = dados %>%
filter(DriveTrain == "Front")
mean(d$Weight) # Média dos pesos dos carros
sd(d$Weight) # Desvio padrão dos pesos dos carros
# DriveTrain = 4WD
d = dados %>%
filter(DriveTrain == "4WD")
mean(d$Weight) # Média dos pesos
sd(d$Weight) # Desvio padrão dos pesos dos carros
# DriveTrain = Rear
d = dados %>%
filter(DriveTrain == "Rear")
mean(d$Weight) #  Média dos pesos dos carros
sd(d$Weight) # Desvio padrão dos pesos dos carros
# Além disso, o menor desvio padrão em relação ao peso é dos carros do tipo Rear de DriveTrain.
# Além disso, o menor desvio padrão em relação ao peso é dos carros do tipo Rear de DriveTrain.
# Isso significa que os valores dos pesos dos carros variam menos que os outros.
# Além disso, o menor desvio padrão em relação ao peso é dos carros do tipo Rear de DriveTrain.
# Isso significa que os valores dos pesos dos carros variam menos que os outros.
# A interpretação pode ser que esse tipo de DriveTrain são mais para carros pesados.
# Além disso, o menor desvio padrão em relação ao peso é dos carros do tipo Rear de DriveTrain.
# Isso significa que os valores dos pesos dos carros variam menos que os outros.
# A interpretação pode ser que esse tipo de DriveTrain são mais para carros pesados.
setwd("~/Documents/IC-2020/optimized-calibration/gradient/f_b/")
library(tidyverse)
## Grupo 1
# sem fazer a média
dados = read.csv("rugo_2/dados.csv")
dados %>%
ggplot(mapping = aes(x=rugosidade, y=erro))+
geom_line()+
ggtitle("Grupo 1: dados completos")+
ggsave("rugo_1/g1.png")
dados %>%
ggplot(mapping = aes(x=rugosidade, y=erro))+
geom_line()+
ggtitle("Grupo 1: dados completos")+
ggsave("rugo_2/g2.png")
